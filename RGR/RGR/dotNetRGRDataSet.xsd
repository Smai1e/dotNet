<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dotNetRGRDataSet" targetNamespace="http://tempuri.org/dotNetRGRDataSet.xsd" xmlns:mstns="http://tempuri.org/dotNetRGRDataSet.xsd" xmlns="http://tempuri.org/dotNetRGRDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dotNetRGRConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dotNetRGRConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RGR.Properties.Settings.GlobalReference.Default.dotNetRGRConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="plantTableAdapter" GeneratorDataComponentClassName="plantTableAdapter" Name="plant" UserDataComponentName="plantTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dotNetRGRConnectionString (Settings)" DbObjectName="dotNetRGR.dbo.plant" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[plant] WHERE (([plant_id] = @Original_plant_id) AND ([genus] = @Original_genus) AND ([variety] = @Original_variety) AND ([decorative_qualities] = @Original_decorative_qualities))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plant_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plant_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_genus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_variety" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="variety" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_decorative_qualities" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="decorative_qualities" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[plant] ([genus], [variety], [img], [decorative_qualities]) VALUES (@genus, @variety, @img, @decorative_qualities);
SELECT plant_id, genus, variety, img, decorative_qualities FROM plant WHERE (plant_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@genus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@variety" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="variety" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@img" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="img" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@decorative_qualities" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="decorative_qualities" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT plant_id, genus, variety, img, decorative_qualities FROM dbo.plant</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[plant] SET [genus] = @genus, [variety] = @variety, [img] = @img, [decorative_qualities] = @decorative_qualities WHERE (([plant_id] = @Original_plant_id) AND ([genus] = @Original_genus) AND ([variety] = @Original_variety) AND ([decorative_qualities] = @Original_decorative_qualities));
SELECT plant_id, genus, variety, img, decorative_qualities FROM plant WHERE (plant_id = @plant_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@genus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@variety" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="variety" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@img" Precision="0" ProviderType="Image" Scale="0" Size="0" SourceColumn="img" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@decorative_qualities" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="decorative_qualities" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plant_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plant_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_genus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="genus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_variety" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="variety" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_decorative_qualities" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="decorative_qualities" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="plant_id" ColumnName="plant_id" DataSourceName="dotNetRGR.dbo.plant" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@plant_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="plant_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="plant_id" DataSetColumn="plant_id" />
              <Mapping SourceColumn="genus" DataSetColumn="genus" />
              <Mapping SourceColumn="variety" DataSetColumn="variety" />
              <Mapping SourceColumn="img" DataSetColumn="img" />
              <Mapping SourceColumn="decorative_qualities" DataSetColumn="decorative_qualities" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dotNetRGRDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="dotNetRGRDataSet" msprop:Generator_UserDSName="dotNetRGRDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="plant" msprop:Generator_TableClassName="plantDataTable" msprop:Generator_TableVarName="tableplant" msprop:Generator_TablePropName="plant" msprop:Generator_RowDeletingName="plantRowDeleting" msprop:Generator_RowChangingName="plantRowChanging" msprop:Generator_RowEvHandlerName="plantRowChangeEventHandler" msprop:Generator_RowDeletedName="plantRowDeleted" msprop:Generator_UserTableName="plant" msprop:Generator_RowChangedName="plantRowChanged" msprop:Generator_RowEvArgName="plantRowChangeEvent" msprop:Generator_RowClassName="plantRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="plant_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnplant_id" msprop:Generator_ColumnPropNameInRow="plant_id" msprop:Generator_ColumnPropNameInTable="plant_idColumn" msprop:Generator_UserColumnName="plant_id" type="xs:int" />
              <xs:element name="genus" msprop:Generator_ColumnVarNameInTable="columngenus" msprop:Generator_ColumnPropNameInRow="genus" msprop:Generator_ColumnPropNameInTable="genusColumn" msprop:Generator_UserColumnName="genus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="variety" msprop:Generator_ColumnVarNameInTable="columnvariety" msprop:Generator_ColumnPropNameInRow="variety" msprop:Generator_ColumnPropNameInTable="varietyColumn" msprop:Generator_UserColumnName="variety">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="img" msprop:Generator_ColumnVarNameInTable="columnimg" msprop:Generator_ColumnPropNameInRow="img" msprop:Generator_ColumnPropNameInTable="imgColumn" msprop:Generator_UserColumnName="img" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="decorative_qualities" msprop:Generator_ColumnVarNameInTable="columndecorative_qualities" msprop:Generator_ColumnPropNameInRow="decorative_qualities" msprop:Generator_ColumnPropNameInTable="decorative_qualitiesColumn" msprop:Generator_UserColumnName="decorative_qualities">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:plant" />
      <xs:field xpath="mstns:plant_id" />
    </xs:unique>
  </xs:element>
</xs:schema>